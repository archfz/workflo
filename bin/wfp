#!/bin/bash

set -e

branch=$( git branch )
taskId=$( echo "$branch" | grep \* | cut -d ' ' -f2 | sed -r 's/.*(story|[-_]{1}task|bug)\/([A-Za-z]+\-[0-9]+).*/\2/' )
if [ "$taskId" == "" ]; then
	printf "Could not determine the task ID from the branch name!\n"
	printf "branch: $taskId\n"
	exit 1
fi

status=$( git status -sb )
targetBranch=$( echo "$status" | grep \#\# | sed -r 's/.*\.\.\.[^\/]+\/([A-Za-Z0-9\/]+).*/\1/' )
if [ "$targetBranch" == "" ]; then
	printf "Could not determine the target branch from the status!\n"
	printf "status: $status\n"
	exit 1
fi
currentBranch=$( echo "$status" | grep \#\# | sed -r 's/\#\#\s*([^\.]+)\.\.\..*/\1/' )
if [ "$currentBranch" == "" ]; then
	printf "Could not determine the current branch from the status!\n"
	printf "status: $status\n"
	exit 1
fi

origin=$( git remote get-url origin )
project=$(  echo "$origin" | sed -r 's/[^:]+:(.+).git/\1/' )
if [ "$origin" == "" ]; then
	printf "Could not determine the origin from the git url!\n"
	printf "url: $origin\n"
	exit 1
fi

repoType=$(echo "$origin" | sed -r 's/git@([^.]+)\.[^:]+:.+.git/\1/')
if [ "$repoType" == "" ]; then
	printf "Could not determine the repository type from the git url!\n"
	printf "url: $origin\n"
	exit 1
fi

git push origin "$currentBranch"

set -o pipefail
results=$(wfmain "create_merge_request" "$taskId" "$project" "$repoType" "$currentBranch" "$targetBranch" | tee /dev/tty )
set +o pipefail

logtime="$1"
if [ "$logtime" == "" ]; then
    printf "Commit log time omitted. Skipping work log..\n"
    exit 0
fi

lastNonMergeCommit=$(git rev-list --no-merges -n 1 HEAD)
description=$(git log --format=%B -n 1 --no-merges | sed -r 's/[^:]+:\s*(.*)/\1/' )

printf "Adding work log..";

set -o pipefail
results=$(wfmain "log_work" "$taskId" "$description" "$logtime" | tee /dev/tty )
set +o pipefail
